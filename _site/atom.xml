<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Arash Ghoreyshi</title>
 <link href="http://blog.greyshi.com/atom.xml" rel="self"/>
 <link href="http://blog.greyshi.com/"/>
 <updated>2014-01-31T02:48:44-06:00</updated>
 <id>http://blog.greyshi.com</id>
 <author>
   <name>Arash Ghoreyshi</name>
   <email></email>
 </author>

 
 <entry>
   <title>Building Amazon Instant at HackTX</title>
   <link href="http://blog.greyshi.com/software/2013/11/17/building-amazon-instant-at-hacktx/"/>
   <updated>2013-11-17T18:59:00Z</updated>
   <id>http://blog.greyshi.com/software/2013/11/17/building-amazon-instant-at-hacktx</id>
   <content type="html">&lt;p&gt;This weekend at &lt;a href=&quot;http://hacktx.com&quot;&gt;HackTX&lt;/a&gt; I experienced my first full-fledged hackathon. I didn&amp;#39;t have a group or even an idea going into it, but I learned a lot and came out of it with something I was proud of. Check out &lt;a href=&quot;http://amz.greyshi.com&quot;&gt;Amazon Instant&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;I ended up finding a group of a couple guys that already had an idea. The idea was almost as hard to explain as it was to build, but I&amp;#39;ll give it a shot. They wanted to build an essay templating system that generated essays from skeletons based on some key topic. For instance, if the subject of one essay was Microsoft, you could transform it into an essay about Apple. Markov chains were mentioned (eek). It took me a little while to convince them that this wasn&amp;#39;t the best idea. For one thing, essays tend to be tailored to the subject too closely to simply swap the subject and rebuild. Also, the fact that both essays and information sources such as Wikipedia are unstructured makes the task pretty much impossible to finish within 24 hours.&lt;/p&gt;

&lt;p&gt;Now we had to come up with a new idea. A website called &lt;a href=&quot;http://ytinstant.com&quot;&gt;YouTube Instant&lt;/a&gt; came to mind. I had seen it a couple weeks ago and thought it was a cool idea, and it seemed pretty simple to make. It loaded a YouTube video relevant to your search term in real-time. The creator of that site was inspired by &lt;a href=&quot;http://www.google.com/insidesearch/features/instant/about.html&quot;&gt;Google Instant&lt;/a&gt;, and I thought we could continue that chain of inspiration. Doing this was also a chance to learn how to make dynamic web pages. I looked through my bookmarks and a few candidates came to mind, including Twitter, Reddit, Netflix, and Amazon. We decided on Amazon and the initial name was Impulse Buy. When using the site you could start with something general and get more specific as you watched the items appearing follow suit.&lt;/p&gt;

&lt;p&gt;By the time we started making real progress, the group had shrunk to just me and another guy. Luckily, he had some experience using javascript. After hacking at it for a little while we were able to use Amazon&amp;#39;s product API and AngularJS to get relevant items back as we typed. Unfortunately, there was a problem in that we would often get a bad response from Amazon. We soon found that we were being throttled because Amazon&amp;#39;s API has an upper limit of one request per second for each API key. This was really bad for us since we were making a request every time a user entered in a new character. We turned to other website APIs, but they all either had similar limits or were bad choices for other reasons. Plus, we had already put some work into using Amazon&amp;#39;s API.&lt;/p&gt;

&lt;p&gt;We spent some time considering possible solutions or workarounds. We failed to find a real solution, but we did a couple of things to make it useable at a very small scale. One of those things was to alternate between two different Amazon API keys with every request, giving us two requests per second. We&amp;#39;d probably use more than two keys if Amazon didn&amp;#39;t require credit card information for registration. This was super hacky, but hey, this was a hackathon. The second thing we did was set an interval between requests rather than query Amazon after every user input update. 600ms worked pretty well.&lt;/p&gt;

&lt;p&gt;After a few more hours we had a site that worked for a couple people at a time, which was enough for a demo. While some groups hacked for the full 24 hours, we didn&amp;#39;t have high expectations in terms of winning the competition, so we went home to sleep for a bit.&lt;/p&gt;

&lt;p&gt;We met back around noon, added some polish to the site, and went on to the first round. We knew we were competing with teams of five who knew exactly what they were going to work on from the start, so we didn&amp;#39;t expect to win. We were right about that.&lt;/p&gt;

&lt;p&gt;It was great seeing what some of the teams had created in such a short time. The first prize winners made a game like Guitar Hero, but it revolved around whistling. Another group made a peer-to-peer file sharing application that worked within a web browser.&lt;/p&gt;

&lt;p&gt;I went home inspired to make our project better. It&amp;#39;s a huge bummer that it can&amp;#39;t get any widespread use because of Amazon&amp;#39;s throttling, but it&amp;#39;s still cool and I learned a lot making it. Maybe one day there&amp;#39;ll be a real workaround that makes it viable. For now, give it a try, and don&amp;#39;t worry about getting throttled; I don&amp;#39;t get much traffic. &lt;a href=&quot;http://amz.greyshi.com&quot;&gt;amz.greyshi.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.youtube.com/watch?v=bpOSxM0rNPM&quot;&gt;Do I Wanna Know?&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Using Calendars to Manage Deadlines</title>
   <link href="http://blog.greyshi.com/productivity/2013/09/10/using-calendars-to-manage-deadlines/"/>
   <updated>2013-09-10T22:01:00Z</updated>
   <id>http://blog.greyshi.com/productivity/2013/09/10/using-calendars-to-manage-deadlines</id>
   <content type="html">&lt;p&gt;All through my education I&amp;#39;ve dreaded keeping up with assignment due dates and when my next exam is. It always felt as if I was forgetting something and that I&amp;#39;d suffer if I did. This hardly ever actually happened, but I was tired of keeping up with these things and decided I wanted technology to remember for me.&lt;/p&gt;

&lt;p&gt;Allow me to reintroduce you to your calendar app. I use google calendar integrated with my OSX calendar app, but either by itself will work fine. You might be thinking, &amp;quot;I already use calendars, and I&amp;#39;m not about to schedule tasks I want to accomplish on there because they don&amp;#39;t happen at a set time and I don&amp;#39;t want to pollute my pure, beautiful calendar.&amp;quot; Well, I can&amp;#39;t really blame you because I felt the same way at one point in my life. The trick, however, is to create an all-day event for each task!&lt;/p&gt;

&lt;p&gt;All-day events show up at the top of the calendar. Here&amp;#39;s a part of my week:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://copy.com/qDV1f3X08T0D&quot; alt=&quot;Mac Calendar&quot;&gt;&lt;/p&gt;

&lt;p&gt;As you can see, I&amp;#39;ve got a view of everything I need to keep track of in one place. If you want to be reminded of an upcoming task, setting that up is as easy as editing the event and adding an alert. No need to go through the reminders app.&lt;/p&gt;

&lt;p&gt;Another beautiful things is that I can see what&amp;#39;s on my plate anywhere I am as long as I&amp;#39;ve got my phone with me. Here&amp;#39;s what tomorrow looks like:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://copy.com/fzzjcOZJs0ET&quot; alt=&quot;iPhone Calendar&quot;&gt;&lt;/p&gt;

&lt;p&gt;I&amp;#39;ve got a few things due tomorrow, and two of them are writing assignments. I guess writing that essay thirty minutes ago got me in the mood to make this blog post.&lt;/p&gt;

&lt;p&gt;Now, my people, go forth and schedule every task can get your hands on!&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.youtube.com/watch?feature=player_detailpage&amp;amp;v=xWvWDu6IAyY#t=30&quot;&gt;Fuck Your Ethnicity&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Example content</title>
   <link href="http://blog.greyshi.com/2012/02/07/example-content/"/>
   <updated>2012-02-07T00:00:00-06:00</updated>
   <id>http://blog.greyshi.com/2012/02/07/example-content</id>
   <content type="html">&lt;p&gt;This blog post shows a few different types of content that&amp;#39;s supported and styled with Hyde. Basic typography, images, and code are all supported.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis &lt;a href=&quot;#&quot;&gt;dis parturient montes&lt;/a&gt;, nascetur ridiculus mus. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Sed posuere consectetur est at lobortis. Cras mattis consectetur purus sit amet fermentum.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Curabitur blandit tempus porttitor. &lt;strong&gt;Nullam quis risus eget urna mollis&lt;/strong&gt; ornare vel eu leo. Nullam id dolor id nibh ultricies vehicula ut id elit.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Etiam porta &lt;em&gt;sem malesuada magna&lt;/em&gt; mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.&lt;/p&gt;

&lt;h2&gt;Heading&lt;/h2&gt;

&lt;p&gt;Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.&lt;/p&gt;

&lt;h3&gt;Sub-heading&lt;/h3&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Example can be run directly in your JavaScript console&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Create a function that takes two arguments and returns the sum of those arguments&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;b&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;return a + b&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Call the function&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// &amp;gt; 8&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa.&lt;/p&gt;

&lt;h3&gt;Sub-heading&lt;/h3&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Praesent commodo cursus magna, vel scelerisque nisl consectetur et.&lt;/li&gt;
&lt;li&gt;Donec id elit non mi porta gravida at eget metus.&lt;/li&gt;
&lt;li&gt;Nulla vitae elit libero, a pharetra augue.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Donec ullamcorper nulla non metus auctor fringilla. Nulla vitae elit libero, a pharetra augue.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Vestibulum id ligula porta felis euismod semper.&lt;/li&gt;
&lt;li&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.&lt;/li&gt;
&lt;li&gt;Maecenas sed diam eget risus varius blandit sit amet non magna.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Cras mattis consectetur purus sit amet fermentum. Sed posuere consectetur est at lobortis.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Want to see something else added? &lt;a href=&quot;https://github.com/mdo/hyde/issues/new&quot;&gt;Open an issue.&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 

</feed>
